
services:
  nginx:
    ports:
      - "85:85"
      - "443:443"
    build:
      context: ./Nginx
      dockerfile: Dockerfile
    depends_on:
      authentication:
        condition: service_started
      node:
        condition: service_started

  node:
    build:
      context: ./nodes
      dockerfile: DockerFile
    ports:
      - "8081:8081"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/terralogic
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: adminpwd
    depends_on:
      postgres:
        condition: service_healthy


  authentication:
    image: authentication
    build:
      context: ./authentication
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/terralogic
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: adminpwd
    depends_on:
      postgres:
        condition: service_healthy

      
  


  postgres:
    image: postgres:latest
    container_name: postgres
    hostname: postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: adminpwd
      POSTGRES_DB: terralogic
    ports:
      - "5432:5432"
    volumes:
      - "postgres:/var/lib/postgresql/data"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d terralogic"]
      interval: 5s
      timeout: 5s
      retries: 5

  

volumes:
  postgres: 
    driver: local
  